var map = {
    compilerVersion: 9,
    title: "Test Map V9",
    song: "env2",
    maker: "Ice dodo map maker",
    spawn: [0, 0.5, 0],
    init: function() {
        a.e([2.00007, 0.00007, -72.78993]);
        a.p([25.00049, 2.62049, -4.11951], [0, -0.79, 0], [20, 20, 0.5], "000000", 0, 0, 0.6, false, true, false, false);
        a.p([25, 2.62, -10.96], [0, -0.79, 0], [20, 20, 0.5], "000000", 0, 0, 0.6, false, true, false, false);
        a.p([21.86007, 0.25007, -19.19993], [0.26, 0, -0.79], [0.5, 20, 40], "000000", 0, 0, 0.6, false, true, false, false);
        a.p([25.00014, 0.25014, -21.34986], [0, -0.79, 0], [20, 20, 0.5], "000000", 0, 0, 0.6, false, true, false, false);
        a.p([3.00021, 0.00021, -49.99979], [-2.36, 0, 0], [0.02, 0, 2], "000000", 0, 0, 0.6, false, false, false, false);
        a.p([3.00028, 0.00028, -49.99972], [0, 0, 0], [0.02, 0, 2], "000000", 0, 0, 0.6, false, false, false, false);
        a.p([3.00035, 0.00035, -49.99965], [-0.79, 0, 0], [0.02, 0, 2], "000000", 0, 0, 0.6, false, false, false, false);
        a.p([3.00042, 0.00042, -49.99958], [-1.57, 0, 0], [0.02, 0, 2], "000000", 0, 0, 0.6, false, false, false, false);
        a.p([4.95049, 0.00049, -18.72951], [-1.78, -2.62, -4.92], [2, 2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0, 0, -2], [0, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.69007, 0.00007, -3.69993], [-0.79, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.21014, 0.00014, -5.36986], [0.19, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.40021, 0.00021, -7.12979], [0.66, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.46972, 0.00028, -8.87972], [0.26, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.07035, 0.00035, -10.51965], [-0.86, 0, 0], [0.02, 0.02, 2.1], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.41042, 0.00042, -12.02958], [0.49, 0, 0], [0.02, 0.02, 1.9], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.36049, 0.00049, -13.76951], [-0.4, 0, 0], [0.04, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.39, 0, -15.14], [-0.96, 0, 0], [0.06, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.64007, 0.00007, -63.36993], [0, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.90014, 0.00014, -18.19986], [0.89, 0, 0], [0.1, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.39021, 0.00021, -19.84979], [-0.21, 0, 0], [0.12, 0.02, 2.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.62028, 0.00028, -58.14972], [0.26, 0, 0], [0.02, 0.02, 2.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.07035, 0.00035, -56.54965], [-0.99, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.97042, 0.00042, -26.09958], [0.73, 0, 0], [0.04, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.77049, 0.00049, -23.20951], [-1.37, 0, 0], [0.08, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.68, 0, -24.37], [0.05, 0, 0], [0.06, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.05007, 0.00007, -30.93993], [0.63, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.23014, 0.00014, -27.81986], [0.08, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.90021, 0.00021, -29.46979], [-0.84, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.64028, 0.00028, -32.29972], [0.98, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.24035, 0.00035, -33.74965], [-0.44, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.61042, 0.00042, -36.46958], [-0.16, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.56049, 0.00049, -35.06951], [-1.13, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.11, 0, -38.2], [0.72, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.48007, 0.00007, -39.12993], [1.4, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.03986, 0.00014, -40.17986], [-0.49, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.65021, 0.00021, -42.02979], [-0.23, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.72028, 0.00028, -45.64972], [-0.63, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.50035, 0.00035, -43.91965], [0.38, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.20042, 0.00042, -47.43958], [0.1, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.29049, 0.00049, -49.00951], [0.94, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.16, 0, -50.32], [-0.77, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.11007, 0.00007, -43.60993], [2.39, 0, 0], [0.02, 0.02, 1], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.22014, 0.00014, -43.50986], [1.87, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.12021, 0.00021, -43.85979], [3.35, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.15972, 0.00028, -44.83972], [-1.57, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.09965, 0.00035, -44.93965], [-2.09, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.07042, 0.00042, -44.83958], [-3.58, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.60049, 0.00049, -59.87951], [0.84, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.58, 0, -6.79], [2.09, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.85993, 0.00007, -6.99993], [1.13, 0, 0], [0.02, 0.02, 0.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.56014, 0.00014, -14.93986], [0, 0, 0], [0.04, 0.02, 0.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.93021, 0.00021, -16.63979], [0.26, 0, 0], [0.08, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([5.44028, -0.09972, -17.16972], [0.7, 0.26, 0.03], [0.02, 0.2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([3.59035, 0.00035, -17.17965], [-0.78, 0, 0], [0.2, 0.02, 4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([5.44042, 1.02042, -19.61958], [0.41, 1.08, 0], [0.02, 0.2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.23951, 0.00049, -55.12951], [-0.49, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.91, 0, -26.82], [0.61, 0, 0], [0.02, 0.02, 0.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.83007, 0.00007, -26.71993], [-1.4, 0, 0], [0.02, 0.02, 1], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.48014, 0.00014, -26.43986], [-0.61, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.00021, 0.00021, -52.26979], [-0.12, 0, 0], [0.02, 0.02, 2.5], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.93028, 0.00028, -31.66972], [0.1, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.87035, 0.00035, -31.27965], [-0.42, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([3.02042, 0.00042, -31.04958], [-1.03, 0, 0], [0.02, 0.02, 0.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.40951, 0.43049, -35.80951], [-0.45, 0.52, 0], [0.02, 0.2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.61, 0, -34.21], [0.87, 0, 0], [0.06, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-2.30993, -0.14993, -34.50993], [2.4, -0.17, 0], [0.02, 0.12, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-2.04986, 0.00014, -35.22986], [-15.01, 17.22, -10.63], [1.4, 1.4, 1.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([4.83021, 0.00021, -38.83979], [-16.93, 17.22, -10.63], [1.4, 1.4, 1.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([3.25028, -0.87972, -40.51972], [0.89, -0.17, 0], [0.02, 0.12, 4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([3.44035, 0.00035, -38.18965], [-1.05, 0, 0], [0.06, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([4.93042, 1.05042, -38.64958], [-2.62, 1.33, 0], [0.02, 0.2, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([5.40049, -1.06951, -36.46951], [0.05, 0.57, 0.34], [0.02, 0.12, 6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.07, 0, -39.91], [1.29, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.99993, 0.00007, -40.42993], [0.44, 0, 0], [0.02, 0.02, 2.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.08986, 0.00014, -40.06986], [0.79, 0, 0], [0.02, 0.02, 1.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.57979, 0.00021, -40.74979], [-0.01, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.55972, 0.00028, -40.84972], [-0.94, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.24965, 0.00035, -40.39965], [0.12, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.71958, 0.00042, -40.74958], [-0.43, 0, 0], [0.02, 0.02, 1], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-1.17951, 0.00049, -41.24951], [-1.51, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.81, 0, -40.68], [0.18, 0, 0], [0.02, 0.02, 0.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.68993, 0.00007, -40.07993], [-0.25, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([-0.44986, 0.00014, -22.18986], [0.16, 0, 0], [0.04, 0.02, 1], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.83021, 0.00021, -18.57979], [-0.14, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.23028, 0.00028, -53.87972], [1.19, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.28035, 0.00035, -20.13965], [0.87, 0, 0], [0.02, 0.02, 1.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.68042, 0.00042, -24.36958], [0.05, 0, 0], [0.06, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.34049, 0.00049, -45.55951], [-5.93, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.24, 0, -22.34], [-0.72, 0, 0], [0.1, 0.02, 1.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.15007, 0.00007, -21.29993], [0.84, 0, 0], [0.14, 0.02, 1.3], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.51014, 0.00014, -45.72986], [-4.8, 0, 0], [0.02, 0.02, 1.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.07021, 0.00021, -45.38979], [-6.72, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([1.82028, 0.00028, -45.22972], [-7.68, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.06035, 0.00035, -45.93965], [-6.89, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.25042, 0.00042, -61.45958], [-0.4, 0, 0], [0.02, 0.02, 2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.08049, 0.00049, -46.12951], [-4.89, 0, 0], [0.02, 0.02, 0.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.28, 0, -45.71], [-1.05, 0, 0], [0.02, 0.02, 0.2], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([2.26007, 0.00007, -45.32993], [-8.29, 0, 0], [0.02, 0.02, 0.4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.84014, 0.00014, -64.15986], [0.79, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.43021, 0.00021, -64.15979], [-0.79, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.75028, 0.00028, -64.08972], [0.39, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.52035, 0.00035, -64.08965], [-0.39, 0, 0], [0.02, 0.02, 0.6], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([0.00042, 0.00042, 0.00042], [0, 0, 0], [2, 0.5, 2], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.y([3, 0, -50], [0, 0, 0], [2, 0, 2], "1", 0, 0, 0.6, false, 1, false);
        a.y([3.00007, 0.00007, -49.99993], [0, 0, 0], [2, 0, 2], "1", 0, 0, 0.6, false, 1, false);
    },
    post: function() {
        a.u('P0');
        a.u('P1');
        a.u('P2');
        a.u('P3');
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#000000"));
        cc.set_monkey("speed", default_speed * 0.15);
        cc.set_monkey("cameraDownAngle", 25.0 * Math.PI / 180);
        cc.set_monkey("steer", default_steer * 2.5);
        cc.set_monkey("light.specular", new BABYLON.Color3.FromHexString("#000000"));
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
        case 0:
            if (PZ < 0.0004900000000001015) {
                isSpinLocked = true;
                this.section_id += 1
            }
            break;
        case 1:
            a.mov('P0', 'y', -1.2);
            if (PZ < -5.99951) {
                spinlock = cc.get("isSpinLocked", null);
                this.section_id += 1
            }
            break;
        case 2:
            if (PZ < -5.999790000000001) {
                this.section_id += 1
            }
            break;
        case 3:
            a.mov('P1', 'y', -1.5);
            if (PZ < -12.99979) {
                this.section_id += 1
            }
            break;
        case 4:
            if (PZ < -12.99972) {
                this.section_id += 1
            }
            break;
        case 5:
            a.mov('P2', 'x', 2.0);
            if (PZ < -17.99972) {
                this.section_id += 1
            }
            break;
        case 6:
            if (PZ < -17.99958) {
                this.section_id += 1
            }
            break;
        case 7:
            a.mov('P3', 'z', -1.5);
            if (PZ < -27.99958) {
                this.section_id += 1
            }
            break;
        case 8:
            if (PZ < -64.30965) {
                isSpinLocked = true;
                this.section_id += 1
            }
            break;
        case 9:
            a.mov('P3', 'z', -1.5);
            if (PZ < -64.50965) {
                spinlock = cc.get("isSpinLocked", null);
                this.section_id += 1
            }
            break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('E0', [2.00007, 0.00007, -72.78993], [0, 0, 0], [1, 1, 1]);
        a.re('P0', [25.00049, 2.62049, -4.11951], [0, -0.79, 0], [20, 20, 0.5]);
        a.re('P1', [25, 2.62, -10.96], [0, -0.79, 0], [20, 20, 0.5]);
        a.re('P2', [21.86007, 0.25007, -19.19993], [0.26, 0, -0.79], [0.5, 20, 40]);
        a.re('P3', [25.00014, 0.25014, -21.34986], [0, -0.79, 0], [20, 20, 0.5]);
        a.re('P4', [3.00021, 0.00021, -49.99979], [-2.36, 0, 0], [0.02, 0, 2]);
        a.re('P5', [3.00028, 0.00028, -49.99972], [0, 0, 0], [0.02, 0, 2]);
        a.re('P6', [3.00035, 0.00035, -49.99965], [-0.79, 0, 0], [0.02, 0, 2]);
        a.re('P7', [3.00042, 0.00042, -49.99958], [-1.57, 0, 0], [0.02, 0, 2]);
        a.re('P8', [4.95049, 0.00049, -18.72951], [-1.78, -2.62, -4.92], [2, 2, 2]);
        a.re('P9', [0, 0, -2], [0, 0, 0], [0.02, 0.02, 2]);
        a.re('P10', [0.69007, 0.00007, -3.69993], [-0.79, 0, 0], [0.02, 0.02, 2]);
        a.re('P11', [1.21014, 0.00014, -5.36986], [0.19, 0, 0], [0.02, 0.02, 2]);
        a.re('P12', [0.40021, 0.00021, -7.12979], [0.66, 0, 0], [0.02, 0.02, 2]);
        a.re('P13', [-0.46972, 0.00028, -8.87972], [0.26, 0, 0], [0.02, 0.02, 2]);
        a.re('P14', [0.07035, 0.00035, -10.51965], [-0.86, 0, 0], [0.02, 0.02, 2.1]);
        a.re('P15', [0.41042, 0.00042, -12.02958], [0.49, 0, 0], [0.02, 0.02, 1.9]);
        a.re('P16', [0.36049, 0.00049, -13.76951], [-0.4, 0, 0], [0.04, 0.02, 2]);
        a.re('P17', [1.39, 0, -15.14], [-0.96, 0, 0], [0.06, 0.02, 2]);
        a.re('P18', [0.64007, 0.00007, -63.36993], [0, 0, 0], [0.02, 0.02, 2]);
        a.re('P19', [0.90014, 0.00014, -18.19986], [0.89, 0, 0], [0.1, 0.02, 2]);
        a.re('P20', [0.39021, 0.00021, -19.84979], [-0.21, 0, 0], [0.12, 0.02, 2.2]);
        a.re('P21', [1.62028, 0.00028, -58.14972], [0.26, 0, 0], [0.02, 0.02, 2.2]);
        a.re('P22', [1.07035, 0.00035, -56.54965], [-0.99, 0, 0], [0.02, 0.02, 2]);
        a.re('P23', [1.97042, 0.00042, -26.09958], [0.73, 0, 0], [0.04, 0.02, 2]);
        a.re('P24', [1.77049, 0.00049, -23.20951], [-1.37, 0, 0], [0.08, 0.02, 2]);
        a.re('P25', [2.68, 0, -24.37], [0.05, 0, 0], [0.06, 0.02, 2]);
        a.re('P26', [2.05007, 0.00007, -30.93993], [0.63, 0, 0], [0.02, 0.02, 2]);
        a.re('P27', [1.23014, 0.00014, -27.81986], [0.08, 0, 0], [0.02, 0.02, 2]);
        a.re('P28', [1.90021, 0.00021, -29.46979], [-0.84, 0, 0], [0.02, 0.02, 2]);
        a.re('P29', [0.64028, 0.00028, -32.29972], [0.98, 0, 0], [0.02, 0.02, 2]);
        a.re('P30', [0.24035, 0.00035, -33.74965], [-0.44, 0, 0], [0.02, 0.02, 2]);
        a.re('P31', [2.61042, 0.00042, -36.46958], [-0.16, 0, 0], [0.02, 0.02, 2]);
        a.re('P32', [1.56049, 0.00049, -35.06951], [-1.13, 0, 0], [0.02, 0.02, 2]);
        a.re('P33', [2.11, 0, -38.2], [0.72, 0, 0], [0.02, 0.02, 2]);
        a.re('P34', [0.48007, 0.00007, -39.12993], [1.4, 0, 0], [0.02, 0.02, 2]);
        a.re('P35', [-0.03986, 0.00014, -40.17986], [-0.49, 0, 0], [0.02, 0.02, 2]);
        a.re('P36', [0.65021, 0.00021, -42.02979], [-0.23, 0, 0], [0.02, 0.02, 2]);
        a.re('P37', [0.72028, 0.00028, -45.64972], [-0.63, 0, 0], [0.02, 0.02, 2]);
        a.re('P38', [0.50035, 0.00035, -43.91965], [0.38, 0, 0], [0.02, 0.02, 2]);
        a.re('P39', [1.20042, 0.00042, -47.43958], [0.1, 0, 0], [0.02, 0.02, 2]);
        a.re('P40', [0.29049, 0.00049, -49.00951], [0.94, 0, 0], [0.02, 0.02, 2]);
        a.re('P41', [0.16, 0, -50.32], [-0.77, 0, 0], [0.02, 0.02, 2]);
        a.re('P42', [1.11007, 0.00007, -43.60993], [2.39, 0, 0], [0.02, 0.02, 1]);
        a.re('P43', [1.22014, 0.00014, -43.50986], [1.87, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P44', [1.12021, 0.00021, -43.85979], [3.35, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P45', [-0.15972, 0.00028, -44.83972], [-1.57, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P46', [-0.09965, 0.00035, -44.93965], [-2.09, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P47', [0.07042, 0.00042, -44.83958], [-3.58, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P48', [0.60049, 0.00049, -59.87951], [0.84, 0, 0], [0.02, 0.02, 2]);
        a.re('P49', [-0.58, 0, -6.79], [2.09, 0, 0], [0.02, 0.02, 2]);
        a.re('P50', [-0.85993, 0.00007, -6.99993], [1.13, 0, 0], [0.02, 0.02, 0.8]);
        a.re('P51', [0.56014, 0.00014, -14.93986], [0, 0, 0], [0.04, 0.02, 0.8]);
        a.re('P52', [1.93021, 0.00021, -16.63979], [0.26, 0, 0], [0.08, 0.02, 2]);
        a.re('P53', [5.44028, -0.09972, -17.16972], [0.7, 0.26, 0.03], [0.02, 0.2, 2]);
        a.re('P54', [3.59035, 0.00035, -17.17965], [-0.78, 0, 0], [0.2, 0.02, 4]);
        a.re('P55', [5.44042, 1.02042, -19.61958], [0.41, 1.08, 0], [0.02, 0.2, 2]);
        a.re('P56', [-0.23951, 0.00049, -55.12951], [-0.49, 0, 0], [0.02, 0.02, 2]);
        a.re('P57', [0.91, 0, -26.82], [0.61, 0, 0], [0.02, 0.02, 0.2]);
        a.re('P58', [0.83007, 0.00007, -26.71993], [-1.4, 0, 0], [0.02, 0.02, 1]);
        a.re('P59', [0.48014, 0.00014, -26.43986], [-0.61, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P60', [1.00021, 0.00021, -52.26979], [-0.12, 0, 0], [0.02, 0.02, 2.5]);
        a.re('P61', [2.93028, 0.00028, -31.66972], [0.1, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P62', [2.87035, 0.00035, -31.27965], [-0.42, 0, 0], [0.02, 0.02, 2]);
        a.re('P63', [3.02042, 0.00042, -31.04958], [-1.03, 0, 0], [0.02, 0.02, 0.8]);
        a.re('P64', [-1.40951, 0.43049, -35.80951], [-0.45, 0.52, 0], [0.02, 0.2, 2]);
        a.re('P65', [-0.61, 0, -34.21], [0.87, 0, 0], [0.06, 0.02, 2]);
        a.re('P66', [-2.30993, -0.14993, -34.50993], [2.4, -0.17, 0], [0.02, 0.12, 2]);
        a.re('P67', [-2.04986, 0.00014, -35.22986], [-15.01, 17.22, -10.63], [1.4, 1.4, 1.4]);
        a.re('P68', [4.83021, 0.00021, -38.83979], [-16.93, 17.22, -10.63], [1.4, 1.4, 1.4]);
        a.re('P69', [3.25028, -0.87972, -40.51972], [0.89, -0.17, 0], [0.02, 0.12, 4]);
        a.re('P70', [3.44035, 0.00035, -38.18965], [-1.05, 0, 0], [0.06, 0.02, 2]);
        a.re('P71', [4.93042, 1.05042, -38.64958], [-2.62, 1.33, 0], [0.02, 0.2, 2]);
        a.re('P72', [5.40049, -1.06951, -36.46951], [0.05, 0.57, 0.34], [0.02, 0.12, 6]);
        a.re('P73', [-1.07, 0, -39.91], [1.29, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P74', [-0.99993, 0.00007, -40.42993], [0.44, 0, 0], [0.02, 0.02, 2.4]);
        a.re('P75', [-1.08986, 0.00014, -40.06986], [0.79, 0, 0], [0.02, 0.02, 1.4]);
        a.re('P76', [-1.57979, 0.00021, -40.74979], [-0.01, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P77', [-0.55972, 0.00028, -40.84972], [-0.94, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P78', [-1.24965, 0.00035, -40.39965], [0.12, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P79', [-0.71958, 0.00042, -40.74958], [-0.43, 0, 0], [0.02, 0.02, 1]);
        a.re('P80', [-1.17951, 0.00049, -41.24951], [-1.51, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P81', [-0.81, 0, -40.68], [0.18, 0, 0], [0.02, 0.02, 0.2]);
        a.re('P82', [-0.68993, 0.00007, -40.07993], [-0.25, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P83', [-0.44986, 0.00014, -22.18986], [0.16, 0, 0], [0.04, 0.02, 1]);
        a.re('P84', [1.83021, 0.00021, -18.57979], [-0.14, 0, 0], [0.02, 0.02, 2]);
        a.re('P85', [0.23028, 0.00028, -53.87972], [1.19, 0, 0], [0.02, 0.02, 2]);
        a.re('P86', [1.28035, 0.00035, -20.13965], [0.87, 0, 0], [0.02, 0.02, 1.8]);
        a.re('P87', [2.68042, 0.00042, -24.36958], [0.05, 0, 0], [0.06, 0.02, 2]);
        a.re('P88', [1.34049, 0.00049, -45.55951], [-5.93, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P89', [0.24, 0, -22.34], [-0.72, 0, 0], [0.1, 0.02, 1.8]);
        a.re('P90', [0.15007, 0.00007, -21.29993], [0.84, 0, 0], [0.14, 0.02, 1.3]);
        a.re('P91', [1.51014, 0.00014, -45.72986], [-4.8, 0, 0], [0.02, 0.02, 1.4]);
        a.re('P92', [2.07021, 0.00021, -45.38979], [-6.72, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P93', [1.82028, 0.00028, -45.22972], [-7.68, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P94', [2.06035, 0.00035, -45.93965], [-6.89, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P95', [0.25042, 0.00042, -61.45958], [-0.4, 0, 0], [0.02, 0.02, 2]);
        a.re('P96', [2.08049, 0.00049, -46.12951], [-4.89, 0, 0], [0.02, 0.02, 0.2]);
        a.re('P97', [2.28, 0, -45.71], [-1.05, 0, 0], [0.02, 0.02, 0.2]);
        a.re('P98', [2.26007, 0.00007, -45.32993], [-8.29, 0, 0], [0.02, 0.02, 0.4]);
        a.re('P99', [0.84014, 0.00014, -64.15986], [0.79, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P100', [0.43021, 0.00021, -64.15979], [-0.79, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P101', [0.75028, 0.00028, -64.08972], [0.39, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P102', [0.52035, 0.00035, -64.08965], [-0.39, 0, 0], [0.02, 0.02, 0.6]);
        a.re('P103', [0.00042, 0.00042, 0.00042], [0, 0, 0], [2, 0.5, 2]);
        a.re('Y0', [3, 0, -50], [0, 0, 0], [2, 0, 2]);
        a.re('Y1', [3.00007, 0.00007, -49.99993], [0, 0, 0], [2, 0, 2]);
    },
    physics_update: function() {},
    render_update: function() {}
}
