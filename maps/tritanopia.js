
//date:2024-07-25
//diff:9
//name:Tritanopia
//cup:Dark

var map = {
    title: "Tritanopia",
    song: "env2",
    maker: "Darrk_77",
    spawn: [0, 0.5, 0],
    init: function() {
        a.y([-31.92, 17.17, -242.43], [0, 0, 0], [6.82, 200, 6.82], "002b2e", 0, 0, 0.6, true, 1, false);
        a.p([5.71, -1.52, -248.99], [0, 0, 0], [5, 5, 5], "002b2e,0.3", 0, 0, 0.6, false, false, false, false);
        a.p([-0.37, 0, -54.71], [-0.36, 0, 0], [0.94, 1.46, 0.98], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.p([-32.47, 0.95, -250.57], [0, 0.79, 0], [0.24, 0.54, 2.94], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.p([5.71, 17.31, -226.27], [0, 0, 0], [4, 1.46, 1.16], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.p([-32.46, -0.17, -253.33], [0, 0, 0], [0.24, 0.54, 8], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.y([14.86, -3.82, -243.58], [0, 0, 0], [7.86, 4, 7.86], "002b2e", 0, 0, 0.6, false, 1, false);
        a.y([14.86, 5.85, -243.58], [0, 0, 0], [7.86, 4, 7.86], "002b2e", 0, 0, 0.6, false, 1, false);
        a.p([2.83, 2.87, -53.44], [3.38, -7.91, -2.82], [0.88, 0.88, 0.88], "003c40", 0, 0, 0.6, false, false, false, false);
        a.p([0.46, 0, -52.19], [0, 0, 0], [0.94, 1.46, 2.88], "003c40", 0, 0, 0.6, false, false, false, false);
        a.p([4.14, 17.31, -224.45], [0, 0, 0], [4, 1.46, 1.16], "003c40", 0, 0, 0.6, false, false, false, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [9.66, 9.3, 9.66], "002b2e", 0, 0, 0.6, false, 1, false);
        a.p([1.47, 17.31, -222.54], [0, 0, 0], [4, 1.46, 1.16], "00585e", 0, 0, 0.6, false, false, false, false);
        a.p([1.53, 0, -49.97], [-0.7, 0, 0], [0.94, 1.46, 0.98], "00585e", 0, 0, 0.6, false, false, false, false);
        a.p([17.1, 20.53, -221.06], [2.3, 0.3, 0.29], [4, 4, 4], "00727a", 0, 0, 0.6, false, false, false, false);
        a.p([0.46, 0, -48.73], [0, 0, 0], [0.94, 1.46, 0.98], "00727a", 0, 0, 0.6, false, false, false, false);
        a.p([-3.45, -3.61, -239.87], [2.3, 0.3, 0.29], [4, 4, 4], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.p([2.98, 17.31, -220.72], [0, 0, 0], [4, 1.46, 1.16], "00727a", 0, 0, 0.6, false, false, false, false);
        a.p([-3.47, 2.87, -44.01], [-0.18, -4.16, -3.22], [0.88, 0.88, 0.88], "00808a", 0, 0, 0.6, false, false, false, false);
        a.p([-1.2, 0, -43.4], [0, 0, 0], [1.92, 1.46, 8.82], "00808a", 0, 0, 0.6, false, false, false, false);
        a.p([5.96, 17.31, -219.06], [0, 0, 0], [4, 1.46, 1.16], "00808a", 0, 0, 0.6, false, false, false, false);
        a.p([-7.25, 0, -35.89], [-0.85, 2.31, 0.4], [4, 4, 4], "0098a3", 0, 0, 0.6, true, false, false, false);
        a.p([0, 0, -32.74], [0, 0, 0], [4, 1.46, 0.84], "0098a3", 0, 0, 0.6, true, false, false, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [9.66, 9.3, 9.66], "0098a3", 0, 0, 0.6, false, 1, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [12.3, 7.6, 12.3], "00e4f5", 0, 0, 0.6, false, 1, false);
        a.p([4.98, 3.65, -25.11], [-0.57, -2.11, -3.3], [2.68, 2.68, 2.68], "00e4f5", 0, 0, 0.6, false, false, false, false);
        a.p([5.35, 17.31, -215.58], [0, 0, 0], [4, 1.46, 1.16], "00e4f5", 0, 0, 0.6, false, false, false, false);
        a.p([0, 0, -26.93], [0, 0, 0], [4, 1.46, 9.64], "00e4f5", 0, 0, 0.6, false, false, false, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [12.3, 7.6, 12.3], "003c40", 0, 0, 0.6, false, 1, false);
        a.p([1.92, 17.31, -210.13], [0, 0, 0], [4, 1.46, 8.3], "00e4f5", 0, 0, 0.6, false, false, false, false);
        a.p([2.38, 17.31, -217.24], [0, 0, 0], [4, 1.46, 1.16], "04b3bf", 0, 0, 0.6, false, false, false, false);
        a.p([-3.76, 0.61, -139.39], [0.4, 2.01, 0.7], [1.84, 2.34, 1.48], "43d8e8,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-0.75, 0.61, -131.49], [-0.92, -2.43, 0.61], [1.84, 2.34, 1.48], "43d8e8,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-3.71, 0.61, -125.27], [0, 0, -0.88], [1.84, 2.34, 1.48], "43d8e8,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([3.22, -1.58, -185.6], [0, 0, 0], [1.02, 7.88, 40], "54f8fc", 0, 0, 0.6, true, false, false, false);
        a.p([-3.6, 1.08, -78.07], [0, 0, -0.88], [3.4, 1.6, 1.02], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-1.9, -0.9, -83.96], [0, 0, -0.88], [2.5, 1.6, 1.96], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-1.37, -1.54, -91.95], [0, 0, -0.88], [1.7, 1.6, 1.02], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-3.7, 1.29, -91.95], [0, 0, -0.88], [2.94, 1.6, 1.02], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-4.24, 1.85, -100.45], [0, 0, -0.88], [1.4, 1.6, 1.02], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-1.99, -0.67, -100.36], [0, 0, -0.88], [3.18, 1.6, 1.02], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.p([-2.68, -0.34, -97.97], [0, 0, -0.88], [0.24, 1.6, 0.3], "83dfe6,0.7", 0, 0, 0.6, false, false, true, false);
        a.y([-14.08, 5.85, -59.52], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([-14.08, -3.82, -59.52], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([14.2, -3.82, -105.38], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([14.2, 5.85, -105.38], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([-13.06, 5.85, -158.11], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([-13.06, -3.82, -158.11], [0, 0, 0], [7.86, 4, 7.86], "86e1e5", 0, 0, 0.6, false, 1, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [15.88, 5.34, 15.88], "00727a", 0, 0, 0.6, false, 1, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [15.88, 5.34, 15.88], "87f7ff", 0, 0, 0.6, false, 1, false);
        a.p([0.74, 0, -20.97], [0, 0, 0], [3.76, 1.46, 0.8], "87f7ff", 0, 0, 0.6, false, false, false, false);
        a.p([2.69, -1.58, -181.25], [0, 0, 0], [0.26, 7.88, 2.36], "99656d", 0, 0, 0.6, false, false, true, false);
        a.p([2.72, -1.58, -190.69], [0, 0, 0], [0.46, 7.88, 2.36], "99656d", 0, 0, 0.6, false, false, true, false);
        a.p([2.67, -1.58, -172.16], [0, 0, 0], [0.36, 7.88, 2.36], "99656d", 0, 0, 0.6, false, false, true, false);
        a.p([2.72, -1.58, -199.77], [0, 0, 0], [0.46, 7.88, 2.36], "99656d", 0, 0, 0.6, false, false, true, false);
        a.p([-0.72, 0, -56.54], [-0.7, 0, 0], [0.94, 1.46, 0.98], "99656d", 0, 0, 0.6, false, false, false, false);
        a.p([-0.4, 0, -59.91], [0, 0, 0], [3.6, 1.46, 4], "b5606d", 0, 0, 0.6, false, false, false, false);
        a.p([-2.2, -1.91, -154.88], [0, 0, 0], [6, 6, 14], "bbf8fc", 0, 0, 0.6, false, false, false, false);
        a.y([13.15, 17.17, -21.85], [0, 0, 0], [6.82, 200, 6.82], "bbf8fc", 0, 0, 0.6, false, 1, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [20.2, 3.78, 20.2], "bbf8fc", 0, 0, 0.6, false, 1, false);
        a.y([-14.08, 17.17, -59.52], [0, 0, 0], [6.82, 200, 6.82], "b5606d", 0, 0, 0.6, false, 1, false);
        a.p([2.03, 0, -19.54], [0, 0, 0], [2.48, 1.46, 0.8], "bbf8fc", 0, 0, 0.6, false, false, false, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [20.2, 3.78, 20.2], "00808a", 0, 0, 0.6, false, 1, false);
        a.y([-13.06, 17.17, -158.11], [0, 0, 0], [6.82, 200, 6.82], "bbf8fc", 0, 0, 0.6, false, 1, false);
        a.y([14.08, 17.17, -213.5], [0, 0, 0], [6.82, 200, 6.82], "00e4f5", 0, 0, 0.6, false, 1, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [24.42, 2.72, 24.42], "d6fcff", 0, 0, 0.6, false, 1, false);
        a.p([3.09, 0, -18.27], [0, 0, 0], [1.68, 1.46, 0.8], "d6fcff", 0, 0, 0.6, false, false, false, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [24.42, 2.72, 24.42], "04b3bf", 0, 0, 0.6, false, 1, false);
        a.y([13.15, -3.82, -21.85], [0, 0, 0], [7.86, 4, 7.86], "db3d3d", 0, 0, 0.6, false, 1, false);
        a.y([13.15, 5.85, -21.85], [0, 0, 0], [7.86, 4, 7.86], "db3d3d", 0, 0, 0.6, false, 1, false);
        a.p([9.77, 3.91, -85.86], [-1.85, 3.56, 0.43], [4, 4, 4], "de4949", 0, 0, 0.6, false, false, false, false);
        a.p([-12.23, 3.91, -66.85], [-1.85, 3.56, 0.43], [4, 4, 4], "de4949", 0, 0, 0.6, false, false, false, false);
        a.p([-3.45, -0.47, -64.65], [0, 0, -0.88], [6, 1.46, 6.74], "e84a4a", 0, 0, 0.6, false, false, false, false);
        a.c([1.57, 1.17, -22.93], "ff4040");
        a.p([5.76, 3.65, -9.63], [-0.79, -2, 0.76], [2.68, 2.68, 2.68], "ff4040", 0, 0, 0.6, false, false, false, false);
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [28.16, 1.86, 28.16], "ff4040", 0, 0, 0.6, false, 1, false);
        a.c([0.85, 1.17, -22.93], "ff4040");
        a.p([-2.2, -0.47, -131.04], [0, 0, 0], [6, 1.46, 20], "d6fcff", 0, 0, 0.6, false, false, false, false);
        a.p([0, 0, -4], [0, 0, 0], [4, 1.46, 12], "ff4040", 0, 0, 0.6, false, false, false, false);
        a.c([-1.48, 1.17, -30.9], "ff4040");
        a.c([-0.86, 1.17, -30.9], "ff4040");
        a.c([-0.15, 1.17, -30.9], "ff4040");
        a.p([9.44, -0.47, -125.89], [2.92, -2.31, -0.12], [4, 4, 4], "ff4040", 0, 0, 0.6, false, false, false, false);
        a.p([-12.22, -0.47, -140.77], [2.92, -2.31, -0.12], [4, 4, 4], "ff4040", 0, 0, 0.6, false, false, false, false);
        a.p([-3.45, -0.47, -71.72], [0, 0, -0.88], [6, 1.46, 6.74], "ff4040", 0, 0, 0.6, false, false, false, false);
        a.p([0.92, 0, -10.93], [0, 0, 0], [3.3, 1.46, 0.8], "ff5c5c", 0, 0, 0.6, false, false, false, false);
        a.p([-2.2, 0.56, -142.27], [0, 0.6, 0], [6, 1.46, 4.12], "d6fcff", 0, 0, 0.6, false, false, false, false);
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [24.42, 2.72, 24.42], "ff5c5c", 0, 0, 0.6, false, 1, false);
        a.p([-3.45, -0.47, -78.79], [0, 0, -0.88], [6, 1.46, 6.74], "ff5c5c", 0, 0, 0.6, false, false, false, false);
        a.p([1.91, 0, -12.39], [0, 0, 0], [2.04, 1.46, 0.8], "ff7d7d", 0, 0, 0.6, false, false, false, false);
        a.p([-3.45, -0.47, -85.86], [0, 0, -0.88], [6, 1.46, 6.74], "ff7d7d", 0, 0, 0.6, false, false, false, false);
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [20.2, 3.78, 20.2], "ff7d7d", 0, 0, 0.6, false, 1, false);
        a.p([-2.8, 3.65, -14.93], [1.57, -5.59, -1.33], [2.68, 2.68, 2.68], "ff9c9c", 0, 0, 0.6, false, false, false, false);
        a.p([2.78, 0, -13.94], [0, 0, 0], [1.18, 1.46, 0.8], "ff9c9c", 0, 0, 0.6, false, false, false, false);
        a.p([-3.45, -0.47, -92.93], [0, 0, -0.88], [6, 1.46, 6.74], "ff9c9c", 0, 0, 0.6, false, false, false, false);
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [15.88, 5.34, 15.88], "ff9c9c", 0, 0, 0.6, false, 1, false);
        a.p([3.51, 0, -15.47], [0, 0, 0], [0.38, 1.46, 0.8], "ffc2c2", 0, 0, 0.6, false, false, false, false);
        a.c([-0.77, 1.17, -40.61], "ffc2c2");
        a.p([-3.45, -0.47, -99.42], [0, 0, -0.88], [6, 1.46, 5.26], "ffc2c2", 0, 0, 0.6, false, false, false, false);
        a.c([-1.19, 1.17, -46.99], "ffc2c2");
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [12.3, 7.6, 12.3], "ffc2c2", 0, 0, 0.6, false, 1, false);
        a.p([3.75, 0, -17], [0, 0, 0], [1.18, 1.46, 0.8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.c([-0.09, 1.17, -52.21], "ffffff");
        a.p([-2.2, -0.47, -111], [0, 0, 0.74], [6, 1.46, 20], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([9.73, 5.63, -178.45], [2.92, -2.31, -0.12], [4, 4, 4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([5.71, -5.58, -233.32], [0, 0, 0], [4, 0.54, 13.02], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.p([5.71, -5.58, -243.58], [0, 0, 0], [0.24, 0.54, 8], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.y([14.2, 17.17, -105.38], [0, 0, 0], [6.82, 200, 6.82], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([14.86, 17.17, -243.58], [0, 0, 0], [6.82, 200, 6.82], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([14.08, 10.53, -213.5], [0, 0, 0], [7.86, 4, 7.86], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([14.08, 20.21, -213.5], [0, 0, 0], [7.86, 4, 7.86], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([-31.92, 5.85, -242.43], [0, 0, 0], [7.86, 4, 7.86], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([-31.92, -3.82, -242.43], [0, 0, 0], [7.86, 4, 7.86], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([-22.52, 4.36, -77.62], [0, 0, -1.57], [9.66, 9.3, 9.66], "ffffff", 0, 0, 0.6, false, 1, false);
        a.y([-7.98, 11.09, -217.23], [0, 0, -0.9], [28.16, 1.86, 28.16], "00e4f5", 0, 0, 0.6, false, 1, false);
        a.p([9.02, -10.75, -194.63], [-0.64, -3.28, 0.36], [4, 4, 4], "ffffff", 0, 0, 0.6, false, false, false, false);
        a.y([16.99, 7.92, -161.55], [0, 0, -1.57], [28.16, 1.86, 28.16], "ffffff", 0, 0, 0.6, false, 1, false);
        a.p([-32.47, -1.28, -250.58], [0, -0.79, 0], [0.24, 0.54, 2.94], "002b2e", 0, 0, 0.6, false, false, false, false);
        a.p([-1.2, -0.89, -40.06], [0, 0.37, 0], [1.92, 0.26, 2.04], "-1.0", 0, 0, 0.6, true, false, false, false);
        a.p([-2.2, 20.08, -215.27], [0, 0, 0], [12.74, 1.46, 39.34], "-1.0", 0, 0, 0.6, false, false, true, false);
        a.p([-3.45, -0.47, -81.59], [0, 0, -0.88], [6, 1.46, 41.6], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.p([3.2, -4.6, -243.28], [0, 0.28, 0], [2.1, 0.54, 8.08], "-1.0", 0, 0, 0.6, false, false, false, false);
        a.e([-31.22, 2.72, -242.73]);
        a.e([-32.31, 2.36, -242.63]);
        a.e([-33.53, 2.36, -242.63]);
        a.e([-33.53, 2.36, -241.14]);
        a.e([-32.31, 2.36, -241.14]);
        a.e([-31.27, 2.36, -241.14]);
        a.e([-31.27, 2.36, -242.63]);
    },
    post: function() {
        a.u('P0');
        a.u('P24');
        a.u('P25');
        a.u('P26');
        a.u('P42');
        cc.set_monkey("jumpSpeed", 0.4);
        cc.set_monkey("jumpHeight", 0.4);
        cc.set_monkey("speed", 0.2);
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
            case 0:
                if (PZ < 0) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#43d8e8");
                    speed = default_speed * 0.8;
                    this.section_id += 1
                }
                break;
            case 1:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -15) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 2:
                if (PZ < -15) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#db3d3d");
                    speed = default_speed * 0.8;
                    this.section_id += 1
                }
                break;
            case 3:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -32) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 4:
                if (PZ < -32) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#ffffff");
                    speed = default_speed * 0.8;
                    this.section_id += 1
                }
                break;
            case 5:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -56) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 6:
                if (PZ < -56) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#86e1e5");
                    speed = default_speed * 0.8;
                    this.section_id += 1
                }
                break;
            case 7:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -61) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    this.section_id += 1
                }
                break;
            case 8:
                if (PZ < -61) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#3a6165");
                    steer = default_steer * 2.0;
                    a.msg_set("Warning: fast");
                    a.cam_d(3.0);
                    a.g(1.0, null, null);
                    this.section_id += 1
                }
                break;
            case 9:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -101) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    steer = cc.get("steer", null);
                    a.msg_del();
                    a.cam_d(null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 10:
                if (PZ < -101) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#86e1e5");
                    speed = default_speed * 1.5;
                    a.msg_set("Stay in the centre at the end.");
                    this.section_id += 1
                }
                break;
            case 11:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -165) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 12:
                if (PZ < -165) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#99656d");
                    speed = default_speed * 0.4;
                    a.cam_cr(-90.0);
                    a.cam_d(4.0);
                    a.g(-1.0, 0.0, null);
                    this.section_id += 1
                }
                break;
            case 13:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -205) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    a.cam_cr(null);
                    a.cam_d(null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 14:
                if (PZ < -205) {
                    scene.clearColor = new BABYLON.Color3.FromHexString("#ffffff");
                    speed = default_speed * 0.5;
                    a.cam_cd(50.0);
                    a.g(null, -1.0, null);
                    this.section_id += 1
                }
                break;
            case 15:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -227) {
                    scene.clearColor = cc.get("scene.clearColor", null);
                    speed = cc.get("speed", null);
                    a.cam_cd(null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
            case 16:
                if (PZ < -227) {
                    speed = default_speed * 0.2;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#002b2e");
                    a.msg_set("Go to the pillar next to the arrow.");
                    this.section_id += 1
                }
                break;
            case 17:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -237) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 18:
                if (PZ < -237) {
                    speed = default_speed * 0.4;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#002b2e");
                    a.msg_set("And go between the white cylinders.");
                    this.section_id += 1
                }
                break;
            case 19:
                a.rot('P24', 'z', 1.0);
                a.rot('P24', 'y', 3.0);
                a.rot('P24', 'x', 0.7);
                a.rot('P25', 'z', 1.0);
                a.rot('P25', 'y', 3.0);
                a.rot('P25', 'x', 0.7);
                a.rot('P26', 'z', 1.0);
                a.rot('P26', 'y', 3.0);
                a.rot('P26', 'x', 0.7);
                a.rot('P42', 'z', 1.5);
                if (PZ < -248) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.msg_del();
                    this.section_id += 1
                }
                break;
            case 20:
                if (PZ < -248) {
                    speed = default_speed * 0.8;
                    rotation = 90.0 * Math.PI / 180;
                    scene.clearColor = new BABYLON.Color3.FromHexString("#ffffff");
                    a.cam_cd(50.0);
                    a.g(null, -1.0, null);
                    this.section_id += 1
                }
                break;
            case 21:
                a.mov('P0', 'x', -0.7);
                a.rot('P0', 'z', 1.3);
                a.rot('P0', 'y', 0.4);
                if (PZ < -258) {
                    speed = cc.get("speed", null);
                    scene.clearColor = cc.get("scene.clearColor", null);
                    a.cam_cd(null);
                    a.g(null, null, null);
                    this.section_id += 1
                }
                break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('Y0', [-31.92, 17.17, -242.43], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('P0', [5.71, -1.52, -248.99], [0, 0, 0], [5, 5, 5]);
        a.re('P1', [-0.37, 0, -54.71], [-0.36, 0, 0], [0.94, 1.46, 0.98]);
        a.re('P2', [-32.47, 0.95, -250.57], [0, 0.79, 0], [0.24, 0.54, 2.94]);
        a.re('P3', [5.71, 17.31, -226.27], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P4', [-32.46, -0.17, -253.33], [0, 0, 0], [0.24, 0.54, 8]);
        a.re('Y1', [14.86, -3.82, -243.58], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y2', [14.86, 5.85, -243.58], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('P5', [2.83, 2.87, -53.44], [3.38, -7.91, -2.82], [0.88, 0.88, 0.88]);
        a.re('P6', [0.46, 0, -52.19], [0, 0, 0], [0.94, 1.46, 2.88]);
        a.re('P7', [4.14, 17.31, -224.45], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('Y3', [-7.98, 11.09, -217.23], [0, 0, -0.9], [9.66, 9.3, 9.66]);
        a.re('P8', [1.47, 17.31, -222.54], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P9', [1.53, 0, -49.97], [-0.7, 0, 0], [0.94, 1.46, 0.98]);
        a.re('P10', [17.1, 20.53, -221.06], [2.3, 0.3, 0.29], [4, 4, 4]);
        a.re('P11', [0.46, 0, -48.73], [0, 0, 0], [0.94, 1.46, 0.98]);
        a.re('P12', [-3.45, -3.61, -239.87], [2.3, 0.3, 0.29], [4, 4, 4]);
        a.re('P13', [2.98, 17.31, -220.72], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P14', [-3.47, 2.87, -44.01], [-0.18, -4.16, -3.22], [0.88, 0.88, 0.88]);
        a.re('P15', [-1.2, 0, -43.4], [0, 0, 0], [1.92, 1.46, 8.82]);
        a.re('P16', [5.96, 17.31, -219.06], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P17', [-7.25, 0, -35.89], [-0.85, 2.31, 0.4], [4, 4, 4]);
        a.re('P18', [0, 0, -32.74], [0, 0, 0], [4, 1.46, 0.84]);
        a.re('Y4', [16.99, 7.92, -161.55], [0, 0, -1.57], [9.66, 9.3, 9.66]);
        a.re('Y5', [16.99, 7.92, -161.55], [0, 0, -1.57], [12.3, 7.6, 12.3]);
        a.re('P19', [4.98, 3.65, -25.11], [-0.57, -2.11, -3.3], [2.68, 2.68, 2.68]);
        a.re('P20', [5.35, 17.31, -215.58], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P21', [0, 0, -26.93], [0, 0, 0], [4, 1.46, 9.64]);
        a.re('Y6', [-7.98, 11.09, -217.23], [0, 0, -0.9], [12.3, 7.6, 12.3]);
        a.re('P22', [1.92, 17.31, -210.13], [0, 0, 0], [4, 1.46, 8.3]);
        a.re('P23', [2.38, 17.31, -217.24], [0, 0, 0], [4, 1.46, 1.16]);
        a.re('P24', [-3.76, 0.61, -139.39], [0.4, 2.01, 0.7], [1.84, 2.34, 1.48]);
        a.re('P25', [-0.75, 0.61, -131.49], [-0.92, -2.43, 0.61], [1.84, 2.34, 1.48]);
        a.re('P26', [-3.71, 0.61, -125.27], [0, 0, -0.88], [1.84, 2.34, 1.48]);
        a.re('P27', [3.22, -1.58, -185.6], [0, 0, 0], [1.02, 7.88, 40]);
        a.re('P28', [-3.6, 1.08, -78.07], [0, 0, -0.88], [3.4, 1.6, 1.02]);
        a.re('P29', [-1.9, -0.9, -83.96], [0, 0, -0.88], [2.5, 1.6, 1.96]);
        a.re('P30', [-1.37, -1.54, -91.95], [0, 0, -0.88], [1.7, 1.6, 1.02]);
        a.re('P31', [-3.7, 1.29, -91.95], [0, 0, -0.88], [2.94, 1.6, 1.02]);
        a.re('P32', [-4.24, 1.85, -100.45], [0, 0, -0.88], [1.4, 1.6, 1.02]);
        a.re('P33', [-1.99, -0.67, -100.36], [0, 0, -0.88], [3.18, 1.6, 1.02]);
        a.re('P34', [-2.68, -0.34, -97.97], [0, 0, -0.88], [0.24, 1.6, 0.3]);
        a.re('Y7', [-14.08, 5.85, -59.52], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y8', [-14.08, -3.82, -59.52], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y9', [14.2, -3.82, -105.38], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y10', [14.2, 5.85, -105.38], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y11', [-13.06, 5.85, -158.11], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y12', [-13.06, -3.82, -158.11], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y13', [-7.98, 11.09, -217.23], [0, 0, -0.9], [15.88, 5.34, 15.88]);
        a.re('Y14', [16.99, 7.92, -161.55], [0, 0, -1.57], [15.88, 5.34, 15.88]);
        a.re('P35', [0.74, 0, -20.97], [0, 0, 0], [3.76, 1.46, 0.8]);
        a.re('P36', [2.69, -1.58, -181.25], [0, 0, 0], [0.26, 7.88, 2.36]);
        a.re('P37', [2.72, -1.58, -190.69], [0, 0, 0], [0.46, 7.88, 2.36]);
        a.re('P38', [2.67, -1.58, -172.16], [0, 0, 0], [0.36, 7.88, 2.36]);
        a.re('P39', [2.72, -1.58, -199.77], [0, 0, 0], [0.46, 7.88, 2.36]);
        a.re('P40', [-0.72, 0, -56.54], [-0.7, 0, 0], [0.94, 1.46, 0.98]);
        a.re('P41', [-0.4, 0, -59.91], [0, 0, 0], [3.6, 1.46, 4]);
        a.re('P42', [-2.2, -1.91, -154.88], [0, 0, 0], [6, 6, 14]);
        a.re('Y15', [13.15, 17.17, -21.85], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('Y16', [16.99, 7.92, -161.55], [0, 0, -1.57], [20.2, 3.78, 20.2]);
        a.re('Y17', [-14.08, 17.17, -59.52], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('P43', [2.03, 0, -19.54], [0, 0, 0], [2.48, 1.46, 0.8]);
        a.re('Y18', [-7.98, 11.09, -217.23], [0, 0, -0.9], [20.2, 3.78, 20.2]);
        a.re('Y19', [-13.06, 17.17, -158.11], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('Y20', [14.08, 17.17, -213.5], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('Y21', [16.99, 7.92, -161.55], [0, 0, -1.57], [24.42, 2.72, 24.42]);
        a.re('P44', [3.09, 0, -18.27], [0, 0, 0], [1.68, 1.46, 0.8]);
        a.re('Y22', [-7.98, 11.09, -217.23], [0, 0, -0.9], [24.42, 2.72, 24.42]);
        a.re('Y23', [13.15, -3.82, -21.85], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y24', [13.15, 5.85, -21.85], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('P45', [9.77, 3.91, -85.86], [-1.85, 3.56, 0.43], [4, 4, 4]);
        a.re('P46', [-12.23, 3.91, -66.85], [-1.85, 3.56, 0.43], [4, 4, 4]);
        a.re('P47', [-3.45, -0.47, -64.65], [0, 0, -0.88], [6, 1.46, 6.74]);
        a.re('C0', [1.57, 1.17, -22.93], [0, 0, 0], [2, 2, 2]);
        a.re('P48', [5.76, 3.65, -9.63], [-0.79, -2, 0.76], [2.68, 2.68, 2.68]);
        a.re('Y25', [-22.52, 4.36, -77.62], [0, 0, -1.57], [28.16, 1.86, 28.16]);
        a.re('C1', [0.85, 1.17, -22.93], [0, 0, 0], [2, 2, 2]);
        a.re('P49', [-2.2, -0.47, -131.04], [0, 0, 0], [6, 1.46, 20]);
        a.re('P50', [0, 0, -4], [0, 0, 0], [4, 1.46, 12]);
        a.re('C2', [-1.48, 1.17, -30.9], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [-0.86, 1.17, -30.9], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-0.15, 1.17, -30.9], [0, 0, 0], [2, 2, 2]);
        a.re('P51', [9.44, -0.47, -125.89], [2.92, -2.31, -0.12], [4, 4, 4]);
        a.re('P52', [-12.22, -0.47, -140.77], [2.92, -2.31, -0.12], [4, 4, 4]);
        a.re('P53', [-3.45, -0.47, -71.72], [0, 0, -0.88], [6, 1.46, 6.74]);
        a.re('P54', [0.92, 0, -10.93], [0, 0, 0], [3.3, 1.46, 0.8]);
        a.re('P55', [-2.2, 0.56, -142.27], [0, 0.6, 0], [6, 1.46, 4.12]);
        a.re('Y26', [-22.52, 4.36, -77.62], [0, 0, -1.57], [24.42, 2.72, 24.42]);
        a.re('P56', [-3.45, -0.47, -78.79], [0, 0, -0.88], [6, 1.46, 6.74]);
        a.re('P57', [1.91, 0, -12.39], [0, 0, 0], [2.04, 1.46, 0.8]);
        a.re('P58', [-3.45, -0.47, -85.86], [0, 0, -0.88], [6, 1.46, 6.74]);
        a.re('Y27', [-22.52, 4.36, -77.62], [0, 0, -1.57], [20.2, 3.78, 20.2]);
        a.re('P59', [-2.8, 3.65, -14.93], [1.57, -5.59, -1.33], [2.68, 2.68, 2.68]);
        a.re('P60', [2.78, 0, -13.94], [0, 0, 0], [1.18, 1.46, 0.8]);
        a.re('P61', [-3.45, -0.47, -92.93], [0, 0, -0.88], [6, 1.46, 6.74]);
        a.re('Y28', [-22.52, 4.36, -77.62], [0, 0, -1.57], [15.88, 5.34, 15.88]);
        a.re('P62', [3.51, 0, -15.47], [0, 0, 0], [0.38, 1.46, 0.8]);
        a.re('C5', [-0.77, 1.17, -40.61], [0, 0, 0], [2, 2, 2]);
        a.re('P63', [-3.45, -0.47, -99.42], [0, 0, -0.88], [6, 1.46, 5.26]);
        a.re('C6', [-1.19, 1.17, -46.99], [0, 0, 0], [2, 2, 2]);
        a.re('Y29', [-22.52, 4.36, -77.62], [0, 0, -1.57], [12.3, 7.6, 12.3]);
        a.re('P64', [3.75, 0, -17], [0, 0, 0], [1.18, 1.46, 0.8]);
        a.re('C7', [-0.09, 1.17, -52.21], [0, 0, 0], [2, 2, 2]);
        a.re('P65', [-2.2, -0.47, -111], [0, 0, 0.74], [6, 1.46, 20]);
        a.re('P66', [9.73, 5.63, -178.45], [2.92, -2.31, -0.12], [4, 4, 4]);
        a.re('P67', [5.71, -5.58, -233.32], [0, 0, 0], [4, 0.54, 13.02]);
        a.re('P68', [5.71, -5.58, -243.58], [0, 0, 0], [0.24, 0.54, 8]);
        a.re('Y30', [14.2, 17.17, -105.38], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('Y31', [14.86, 17.17, -243.58], [0, 0, 0], [6.82, 200, 6.82]);
        a.re('Y32', [14.08, 10.53, -213.5], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y33', [14.08, 20.21, -213.5], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y34', [-31.92, 5.85, -242.43], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y35', [-31.92, -3.82, -242.43], [0, 0, 0], [7.86, 4, 7.86]);
        a.re('Y36', [-22.52, 4.36, -77.62], [0, 0, -1.57], [9.66, 9.3, 9.66]);
        a.re('Y37', [-7.98, 11.09, -217.23], [0, 0, -0.9], [28.16, 1.86, 28.16]);
        a.re('P69', [9.02, -10.75, -194.63], [-0.64, -3.28, 0.36], [4, 4, 4]);
        a.re('Y38', [16.99, 7.92, -161.55], [0, 0, -1.57], [28.16, 1.86, 28.16]);
        a.re('P70', [-32.47, -1.28, -250.58], [0, -0.79, 0], [0.24, 0.54, 2.94]);
        a.re('P71', [-1.2, -0.89, -40.06], [0, 0.37, 0], [1.92, 0.26, 2.04]);
        a.re('P72', [-2.2, 20.08, -215.27], [0, 0, 0], [12.74, 1.46, 39.34]);
        a.re('P73', [-3.45, -0.47, -81.59], [0, 0, -0.88], [6, 1.46, 41.6]);
        a.re('P74', [3.2, -4.6, -243.28], [0, 0.28, 0], [2.1, 0.54, 8.08]);
        a.re('E0', [-31.22, 2.72, -242.73], [0, 0, 0], [1, 1, 1]);
        a.re('E1', [-32.31, 2.36, -242.63], [0, 0, 0], [1, 1, 1]);
        a.re('E2', [-33.53, 2.36, -242.63], [0, 0, 0], [1, 1, 1]);
        a.re('E3', [-33.53, 2.36, -241.14], [0, 0, 0], [1, 1, 1]);
        a.re('E4', [-32.31, 2.36, -241.14], [0, 0, 0], [1, 1, 1]);
        a.re('E5', [-31.27, 2.36, -241.14], [0, 0, 0], [1, 1, 1]);
        a.re('E6', [-31.27, 2.36, -242.63], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
