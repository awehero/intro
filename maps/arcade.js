var map = {
    compilerVersion: 9,
    title: "Test Map V9",
    song: "env2",
    maker: "Ice dodo map maker",
    spawn: [0, 0.5, 0],
    init: function() {
        globalThis.tickets = 0;
        globalThis.currentGame = "golf";
        globalThis.games = [0,0];
        let parentElement = document.getElementById("overlay");
        globalThis.ticketElement = document.createElement("div");
        ticketElement.style.visibility = "visible";
        ticketElement.style.bottom = "80px";
        ticketElement.setAttribute("data-v-31fa11aa", "");
        ticketElement.id = "ticketElement";
        ticketElement.classList.add("textLarge", "overlayTime");
        ticketElement.textContent = "Tickets: " + 0;
        parentElement.appendChild(ticketElement);
        a.p([0.00035, -18.99965, -209.99965], [0, 0, 0], [200, 2, 210], "00000a", 0, 0, 0.6, false, true, false, false);
        a.p([-99.99958, -104.99958, -209.99958], [0, 0, 0], [2, 30, 210], "00000a", 0, 0, 0.6, false, true, false, false);
        a.p([0.00049, -104.99951, -314.99951], [0, 0, 0], [200, 30, 2], "00000a", 0, 0, 0.6, false, true, false, false);
        a.p([0, -105, -105], [0, 0, 0], [200, 30, 2], "00000a", 0, 0, 0.6, false, true, false, false);
        a.p([100.00007, -104.99993, -209.99993], [0, 0, 0], [2, 30, 210], "00000a", 0, 0, 0.6, false, true, false, false);
        a.p([0.00014, 0.00014, -132.99986], [0, 0, 0], [10, 0.5, 29.58], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([0.00021, 0.00021, -12.99979], [0, 0, 0], [10, 0.5, 29.58], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([-12.53972, 0.00028, -149.59972], [0.96, 0, 0], [2, 0.5, 30], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([-30.61965, 2.47035, -171.79965], [0.68, 0.17, -0.01], [10, 0.5, 30], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([1.00042, -0.49958, -293.49958], [0, 0, 0], [50, 6, 0.5], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([-45.01951, 2.50049, -198.87951], [0.17, 0, 0], [10, 0.5, 30], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([32, -3.5, -287.5], [0, 0, 0], [10, 0.5, 28], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([-21.17993, 0.00007, -161.46993], [0.96, 0, 0], [8, 0.5, 4], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([-0.70986, 0.00014, -147.10986], [0.96, 0, 0], [8, 0.5, 8], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([33.50021, -13.74979, -204.99979], [0, 0, 0], [10, 0.5, 18], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([33.50028, -13.74972, -191.99972], [0, 0, 0], [10, 0.5, 4], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([36.50035, -13.74965, -201.99965], [0, 0, 0], [4, 0.5, 24], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([33.66042, -10.83958, -224.18958], [0, 0, 0], [10, 0.5, 20], "0005ab", 0, 0, 0.01, true, false, false, false);
        a.p([30.50049, -13.74951, -201.99951], [0, 0, 0], [4, 0.5, 24], "0005ab", 0, 0, 0.001, true, false, false, false);
        a.p([43.68, -8.5, -243.21], [0, 0, 0], [10, 0.5, 20], "0005ab", 0, 0, 0.01, true, false, false, false);
        a.p([32.00007, -5.49993, -263.49993], [0, 0, 0], [10, 0.5, 20], "0005ab", 0, 0, 0.01, true, false, false, false);
        a.p([-40.99986, 2.50014, -237.49986], [0, 0, 0], [50, 0.5, 50], "0005ab", 0, 0, 0.0, true, false, false, false);
        a.p([-8.43979, 0.10021, -223.49979], [0, 0, -0.35], [16, 1, 0.5], "00ff00", 0, 0, 0.6, false, false, false, false);
        a.p([-6.68972, -1.13972, -237.49972], [0, 0, -0.35], [20, 0.5, 50], "9494ff", 0, 0, 0.0, false, false, false, false);
        a.p([-13.99965, -1.03965, -272.02965], [0, -0.09, 0], [10, 0.5, 20], "9494ff", 0, 0, 0.0, false, false, false, false);
        a.p([-58.33958, 3.00042, -234.07958], [-0.79, 0, 0], [14.4, 1.5, 1], "e8ff00", 0.5, 0, 0.6, false, false, false, false);
        a.p([-42.51951, 3.00049, -247.62951], [1.57, 0, 0], [14.4, 1.5, 1], "e8ff00", 0.5, 0, 0.6, false, false, false, false);
        a.p([-42, 3, -220], [0, 0, 0], [14.4, 1.5, 1], "e8ff00", 0.5, 0, 0.6, false, false, false, false);
        a.y([-49.99993, 3.46007, -239.99993], [0, 0, 0], [4, 0.5, 4], "e8ff00", 0, 0.1, 0.6, false, 1, false);
        a.y([-60.99986, 3.46014, -228.99986], [0, 0, 0], [4, 0.5, 4], "e8ff00", 0, 0.1, 0.6, false, 1, false);
        a.y([-40.99979, 3.46021, -223.99979], [0, 0, 0], [4, 0.5, 4], "e8ff00", 0, 0.1, 0.6, false, 1, false);
        a.y([-33.99972, 3.46028, -249.99972], [0, 0, 0], [4, 0.5, 4], "e8ff00", 0, 0.1, 0.6, false, 1, false);
        a.p([-65.99965, 3.00035, -237.49965], [0, 0, 0], [0.5, 1, 50], "ff13f0", 0.5, 0, 0.6, false, false, false, false);
        a.p([-29.99958, 3.00042, -234.49958], [0, 0, 0], [0.5, 1, 44], "ff13f0", 0.5, 0, 0.6, false, false, false, false);
        a.p([-16.99951, -0.52951, -272.63951], [-0.17, -0.09, -0.02], [0.5, 1, 19], "ff13f0", 0, 0, 0.0, false, false, false, false);
        a.p([-11, -0.53, -272.64], [0.17, -0.09, 0.02], [0.5, 1, 19], "ff13f0", 0, 0, 0.0, false, false, false, false);
        a.p([5.00007, 0.50007, -132.99993], [0, 0, 0], [0.5, 1, 30.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([0.00014, 0.50014, -117.99986], [0, 0, 0], [10.5, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-4.99979, 0.50021, -130.49979], [0, 0, 0], [0.5, 1, 25.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-6.76972, 0.50028, -156.29972], [0.96, 0, 0], [0.5, 1, 29], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-15.18965, 0.50035, -150.14965], [0.96, 0, 0], [0.5, 1, 25], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-34.42958, 3.00042, -168.73958], [0.68, 0.17, -0.01], [0.5, 1, 30.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-27.33951, 3.00049, -175.59951], [0.68, 0.17, -0.01], [0.5, 1, 29], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-40.12, 3, -200.22], [0.17, 0, 0], [0.5, 1, 25.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-49.84993, 3.00007, -197.84993], [0.17, 0, 0], [0.5, 1, 30.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-41.24986, 3.00014, -262.49986], [0, 0, 0], [50, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([28.50021, -13.24979, -201.74979], [0, 0, 0], [0.5, 1, 24.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-59.24972, 3.00028, -212.49972], [0, 0, 0], [14, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-28.99965, 3.00035, -212.49965], [0, 0, 0], [26.12, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([38.50042, -13.24958, -201.74958], [0, 0, 0], [0.5, 1, 24.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([32.00049, -2.99951, -301.49951], [0, 0, 0], [10, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([2.57, -3.9, -237.37], [0, 0, -0.35], [0.5, 1, 50], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-4.68993, -1.15993, -236.36993], [0, 0, -0.35], [16, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-8.43986, 0.10014, -250.49986], [0, 0, -0.35], [16, 1, 0.5], "00ff00", 0, 0, 0.6, false, false, false, false);
        a.p([33.50021, -13.24979, -189.74979], [0, 0, 0], [10.5, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-4.68972, -1.15972, -262.36972], [0, 0, -0.35], [16, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([37.00035, -2.99965, -287.49965], [0, 0, 0], [0.5, 1, 28.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-6.68958, -0.57958, -212.36958], [0, 0, -0.35], [20, 1, 0.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-15.99951, 3.00049, -242.99951], [0, 0, 0], [0.5, 1, 39.5], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([1, -3.5, -293], [0, 0, 0], [50, 0.5, 1], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([1.00007, 2.50007, -292.99993], [0, 0, 0], [50, 0.5, 1], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-23.99986, -0.49986, -292.99986], [0, 0, 0], [0.5, 6.5, 1], "ff13f0", 0, 0, 0.6, false, false, false, false);
        a.p([-8.00979, 0.42021, -250.54979], [0, 0, -0.35], [16, 2, 3], "-1.0", 0, 0, 0.6, true, true, false, false);
        a.p([1.89028, -3.57972, -236.51972], [0, 0, -0.35], [2, 2, 50], "-1.0", 0, 0, 0.6, true, true, false, false);
        a.p([-8.00965, 0.42035, -223.54965], [0, 0, -0.35], [16, 2, 3], "-1.0", 0, 0, 0.6, true, true, false, false);
        a.p([-40.50958, -117.99958, -262.95958], [0, 0, 0], [50, 30, 1], "-1.0", 0, 0, 0.0, false, false, false, false);
        a.p([-15.87951, -117.99951, -243.03951], [0, 0, 0], [0.5, 30, 39.5], "-1.0", 0, 0, 0.0, false, false, false, false);
        a.p([16.12, -100, -205], [0, 0, 0], [2, 50, 166], "-1.0", 0, 0, 0.0, false, false, false, false);
        a.y([-29.99979, 3.00021, -235.99979], [0, 0, 0], [20, 1, 20], "ff13f0", 0, 0, 0.6, false, 1, false);
        a.c([10.00028, -1.3997199999999999, -293.43972], true);
        a.c([-3.99965, -1.3996499999999998, -293.43965], true);
        a.c([3.00042, 0.60042, -293.43958], true);
        a.c([18.00049, 0.60049, -293.43951], true);
        a.c([-12, 1.6, -293.44], true);
        a.e([33.50007, -15.99993, -194.99993]);
    },
    post: function() {
        a.u('P17');
        a.u('P19');
        a.u('P20');
        a.u('P25');
        a.u('P26');
        a.u('P27');
        a.u('Y0');
        a.u('Y1');
        a.u('Y2');
        a.u('Y3');
        cc.set_monkey("scene.clearColor", new BABYLON.Color3.FromHexString("#00000a"));
        cc.set_monkey("jumpHeight", 0.0);
        cc.set_monkey("speed", default_speed * 0.0);
        cc.set_monkey("jumpSpeed", 3.5);
        cc.set_monkey("player.scaling", new BABYLON.Vector3(null,0.5,null));
        cc.set_monkey("steer", 0.03);
        cc.refresh();
    },
    section_id: 0,
    section_update: function() {
        let PZ = player.position.z;
        switch (this.section_id) {
        case 0:
            if (PZ < -16.99993) {
                player.position.z = -130;
                speed = default_speed * 0.5;
                this.section_id += 1
            }
            break;
        case 1:
            if (PZ < -22.99993) {
                speed = cc.get("speed", null);
                this.section_id += 1
            }
            break;
        case 2:
            if (PZ < -119.99978999999999) {
                this.section_id += 1
            }
            break;
        case 3:
            a.rot('P25', 'y', -0.5);
            a.rot('P26', 'y', -1.0);
            a.rot('P27', 'y', 0.5);
            if (games[0] == 0) {
                
                tickets = 10000 - score;
                if (Math.abs(tickets) != tickets) {
                    tickets = 0;
                }
                games[0] = tickets;
                ticketElement.innerText = "Tickets: " + tickets;
            }
            if (PZ < -263.99978999999996) {
                this.section_id += 1
            }
            break;
        case 4:
            if (PZ < -263.99986) {
                isSpinLocked = true;
                this.section_id += 1
            }
            break;
        case 5:
            if (PZ < -277.99986) {
                spinlock = cc.get("isSpinLocked", null);
                this.section_id += 1
            }
            break;
        case 6:
            if (PZ < -277.99986) {
                a.cam_cr(50.0);
                a.g(null, 0.0, 1.0);
                this.section_id += 1
            }
            break;
        case 7:
            if (PZ < -293.99986) {
                a.cam_cr(null);
                a.g(null, null, null);
                this.section_id += 1
            }
            break;
        case 8:
            if (PZ < -293.99972) {
                this.section_id += 1
            }
            break;
        case 9:
            a.rot('P17', 'y', -0.5);
            a.rot('P19', 'y', 0.3);
            a.rot('P20', 'y', 0.3);
            if (PZ < -303.99972) {
                this.section_id += 1
            }
            break;
        }
    },
    reset: function() {
        this.section_id = 0;
        a.re('P0', [0.00035, -18.99965, -209.99965], [0, 0, 0], [200, 2, 210]);
        a.re('P1', [-99.99958, -104.99958, -209.99958], [0, 0, 0], [2, 30, 210]);
        a.re('P2', [0.00049, -104.99951, -314.99951], [0, 0, 0], [200, 30, 2]);
        a.re('P3', [0, -105, -105], [0, 0, 0], [200, 30, 2]);
        a.re('P4', [100.00007, -104.99993, -209.99993], [0, 0, 0], [2, 30, 210]);
        a.re('P5', [0.00014, 0.00014, -132.99986], [0, 0, 0], [10, 0.5, 29.58]);
        a.re('P6', [0.00021, 0.00021, -12.99979], [0, 0, 0], [10, 0.5, 29.58]);
        a.re('P7', [-12.53972, 0.00028, -149.59972], [0.96, 0, 0], [2, 0.5, 30]);
        a.re('P8', [-30.61965, 2.47035, -171.79965], [0.68, 0.17, -0.01], [10, 0.5, 30]);
        a.re('P9', [1.00042, -0.49958, -293.49958], [0, 0, 0], [50, 6, 0.5]);
        a.re('P10', [-45.01951, 2.50049, -198.87951], [0.17, 0, 0], [10, 0.5, 30]);
        a.re('P11', [32, -3.5, -287.5], [0, 0, 0], [10, 0.5, 28]);
        a.re('P12', [-21.17993, 0.00007, -161.46993], [0.96, 0, 0], [8, 0.5, 4]);
        a.re('P13', [-0.70986, 0.00014, -147.10986], [0.96, 0, 0], [8, 0.5, 8]);
        a.re('P14', [33.50021, -13.74979, -204.99979], [0, 0, 0], [10, 0.5, 18]);
        a.re('P15', [33.50028, -13.74972, -191.99972], [0, 0, 0], [10, 0.5, 4]);
        a.re('P16', [36.50035, -13.74965, -201.99965], [0, 0, 0], [4, 0.5, 24]);
        a.re('P17', [33.66042, -10.83958, -224.18958], [0, 0, 0], [10, 0.5, 20]);
        a.re('P18', [30.50049, -13.74951, -201.99951], [0, 0, 0], [4, 0.5, 24]);
        a.re('P19', [43.68, -8.5, -243.21], [0, 0, 0], [10, 0.5, 20]);
        a.re('P20', [32.00007, -5.49993, -263.49993], [0, 0, 0], [10, 0.5, 20]);
        a.re('P21', [-40.99986, 2.50014, -237.49986], [0, 0, 0], [50, 0.5, 50]);
        a.re('P22', [-8.43979, 0.10021, -223.49979], [0, 0, -0.35], [16, 1, 0.5]);
        a.re('P23', [-6.68972, -1.13972, -237.49972], [0, 0, -0.35], [20, 0.5, 50]);
        a.re('P24', [-13.99965, -1.03965, -272.02965], [0, -0.09, 0], [10, 0.5, 20]);
        a.re('P25', [-58.33958, 3.00042, -234.07958], [-0.79, 0, 0], [14.4, 1.5, 1]);
        a.re('P26', [-42.51951, 3.00049, -247.62951], [1.57, 0, 0], [14.4, 1.5, 1]);
        a.re('P27', [-42, 3, -220], [0, 0, 0], [14.4, 1.5, 1]);
        a.re('Y0', [-49.99993, 3.46007, -239.99993], [0, 0, 0], [4, 0.5, 4]);
        a.re('Y1', [-60.99986, 3.46014, -228.99986], [0, 0, 0], [4, 0.5, 4]);
        a.re('Y2', [-40.99979, 3.46021, -223.99979], [0, 0, 0], [4, 0.5, 4]);
        a.re('Y3', [-33.99972, 3.46028, -249.99972], [0, 0, 0], [4, 0.5, 4]);
        a.re('P28', [-65.99965, 3.00035, -237.49965], [0, 0, 0], [0.5, 1, 50]);
        a.re('P29', [-29.99958, 3.00042, -234.49958], [0, 0, 0], [0.5, 1, 44]);
        a.re('P30', [-16.99951, -0.52951, -272.63951], [-0.17, -0.09, -0.02], [0.5, 1, 19]);
        a.re('P31', [-11, -0.53, -272.64], [0.17, -0.09, 0.02], [0.5, 1, 19]);
        a.re('P32', [5.00007, 0.50007, -132.99993], [0, 0, 0], [0.5, 1, 30.5]);
        a.re('P33', [0.00014, 0.50014, -117.99986], [0, 0, 0], [10.5, 1, 0.5]);
        a.re('P34', [-4.99979, 0.50021, -130.49979], [0, 0, 0], [0.5, 1, 25.5]);
        a.re('P35', [-6.76972, 0.50028, -156.29972], [0.96, 0, 0], [0.5, 1, 29]);
        a.re('P36', [-15.18965, 0.50035, -150.14965], [0.96, 0, 0], [0.5, 1, 25]);
        a.re('P37', [-34.42958, 3.00042, -168.73958], [0.68, 0.17, -0.01], [0.5, 1, 30.5]);
        a.re('P38', [-27.33951, 3.00049, -175.59951], [0.68, 0.17, -0.01], [0.5, 1, 29]);
        a.re('P39', [-40.12, 3, -200.22], [0.17, 0, 0], [0.5, 1, 25.5]);
        a.re('P40', [-49.84993, 3.00007, -197.84993], [0.17, 0, 0], [0.5, 1, 30.5]);
        a.re('P41', [-41.24986, 3.00014, -262.49986], [0, 0, 0], [50, 1, 0.5]);
        a.re('P42', [28.50021, -13.24979, -201.74979], [0, 0, 0], [0.5, 1, 24.5]);
        a.re('P43', [-59.24972, 3.00028, -212.49972], [0, 0, 0], [14, 1, 0.5]);
        a.re('P44', [-28.99965, 3.00035, -212.49965], [0, 0, 0], [26.12, 1, 0.5]);
        a.re('P45', [38.50042, -13.24958, -201.74958], [0, 0, 0], [0.5, 1, 24.5]);
        a.re('P46', [32.00049, -2.99951, -301.49951], [0, 0, 0], [10, 1, 0.5]);
        a.re('P47', [2.57, -3.9, -237.37], [0, 0, -0.35], [0.5, 1, 50]);
        a.re('P48', [-4.68993, -1.15993, -236.36993], [0, 0, -0.35], [16, 1, 0.5]);
        a.re('P49', [-8.43986, 0.10014, -250.49986], [0, 0, -0.35], [16, 1, 0.5]);
        a.re('P50', [33.50021, -13.24979, -189.74979], [0, 0, 0], [10.5, 1, 0.5]);
        a.re('P51', [-4.68972, -1.15972, -262.36972], [0, 0, -0.35], [16, 1, 0.5]);
        a.re('P52', [37.00035, -2.99965, -287.49965], [0, 0, 0], [0.5, 1, 28.5]);
        a.re('P53', [-6.68958, -0.57958, -212.36958], [0, 0, -0.35], [20, 1, 0.5]);
        a.re('P54', [-15.99951, 3.00049, -242.99951], [0, 0, 0], [0.5, 1, 39.5]);
        a.re('P55', [1, -3.5, -293], [0, 0, 0], [50, 0.5, 1]);
        a.re('P56', [1.00007, 2.50007, -292.99993], [0, 0, 0], [50, 0.5, 1]);
        a.re('P57', [-23.99986, -0.49986, -292.99986], [0, 0, 0], [0.5, 6.5, 1]);
        a.re('P58', [-8.00979, 0.42021, -250.54979], [0, 0, -0.35], [16, 2, 3]);
        a.re('P59', [1.89028, -3.57972, -236.51972], [0, 0, -0.35], [2, 2, 50]);
        a.re('P60', [-8.00965, 0.42035, -223.54965], [0, 0, -0.35], [16, 2, 3]);
        a.re('P61', [-40.50958, -117.99958, -262.95958], [0, 0, 0], [50, 30, 1]);
        a.re('P62', [-15.87951, -117.99951, -243.03951], [0, 0, 0], [0.5, 30, 39.5]);
        a.re('P63', [16.12, -100, -205], [0, 0, 0], [2, 50, 166]);
        a.re('Y4', [-29.99979, 3.00021, -235.99979], [0, 0, 0], [20, 1, 20]);
        a.re('C0', [10.00028, -1.3997199999999999, -293.43972], [0, 0, 0], [2, 2, 2]);
        a.re('C1', [-3.99965, -1.3996499999999998, -293.43965], [0, 0, 0], [2, 2, 2]);
        a.re('C2', [3.00042, 0.60042, -293.43958], [0, 0, 0], [2, 2, 2]);
        a.re('C3', [18.00049, 0.60049, -293.43951], [0, 0, 0], [2, 2, 2]);
        a.re('C4', [-12, 1.6, -293.44], [0, 0, 0], [2, 2, 2]);
        a.re('E0', [33.50007, -15.99993, -194.99993], [0, 0, 0], [1, 1, 1]);
    },
    physics_update: function() {},
    render_update: function() {}
}
